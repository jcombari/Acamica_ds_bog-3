Consolidado Exocatego

import pandas as pd #dataframe
import os #direcciones
import numpy as np #formato de variables la importar
import glob# leer archivos con el mismo nombre de una ruta especifica
import datetime as dt # hacer operaciones o convertir fecha 
pd.options.display.float_format = '{:.2f}'.format # Para quitar notación cientifica 
pd.set_option('display.max_colwidth', -1) # Muestre el print completo 
pd.set_option('display.max_columns', None) # Mirar las columnas completas 

path_input=r'\\192.168.0.16\Gerencia de Riesgos\Modelos de Riesgo\00. AREA MODELOS\48. BASES DE DATOS MODELOS\Archivos Homologación'
os.chdir(r'\\192.168.0.16\Gerencia de Riesgos\Modelos de Riesgo\00. AREA MODELOS\48. BASES DE DATOS MODELOS\Archivos Homologación')

homologa_id = {"DIALOGO":[1,2,4,5,9],"IBS":["CC","NIT","CE","PAS","RCN"]}
homologa_id_1 = pd.DataFrame(homologa_id)

fields = ['CODIGO_CIUDAD1', 'CITY1']
homologa_ciudad = pd.read_excel('barrios_ciudades.xlsx',sep=' ', usecols=fields, dtype= str)
homologa_ciudad.columns = ['DIALOGO', 'IBS']

homologa_genero = {"DIALOGO":[1,2],"IBS":['M','F']}
homologa_genero  = pd.DataFrame(homologa_genero)
homologa_genero['DIALOGO']= homologa_genero['DIALOGO'].astype(str)

homologa_estado_civil = {"DIALOGO":[3,0,4,6,1,2,5],"IBS":[4,0,3,3,1,2,5]}
homologa_estado_civil = pd.DataFrame(homologa_estado_civil)
homologa_estado_civil['DIALOGO']= homologa_estado_civil['DIALOGO'].astype(str)
homologa_estado_civil['IBS']= homologa_estado_civil['IBS'].astype(str)

homologa_nivel_academico = {"DIALOGO":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"IBS":[1,101,201,600,700,301,401,501,502,502,402,2,403,1]}
homologa_nivel_academico = pd.DataFrame(homologa_nivel_academico)
homologa_nivel_academico['DIALOGO']= homologa_nivel_academico['DIALOGO'].astype(str)
homologa_nivel_academico['IBS']= homologa_nivel_academico['IBS'].astype(str)

fields = ['ORIGEN', 'DESTINO']
homologa_profesion = pd.read_excel('Profesion.xlsx', skipinitialspace=True, usecols=fields, encoding= 'ansi', dtype = str )
homologa_profesion.columns=['DIALOGO', 'IBS']
homologa_profesion['DIALOGO']= homologa_profesion['DIALOGO'].astype(str)
homologa_profesion['IBS']= homologa_profesion['IBS'].astype(str)

fields = ['BARRIO_DIALOGO1', 'BARRIO_IBS1']
homologa_barrio = pd.read_excel('barrios_ciudades.xlsx',sep=' ', usecols=fields, dtype= str)
homologa_barrio.columns = ['DIALOGO', 'IBS']

homologa_tipo_local = {"DIALOGO":['SIN DATO', 'PROPIA SIN HIPOTECA', 'PROPIO CON HIPOTECA', 'FAMILIAR', 'ARRENDADA','NaN'],"IBS":[0,1,2,3,4,5]}
homologa_tipo_local = pd.DataFrame(homologa_tipo_local)

homologa_tipo_contrato = {"DIALOGO":['INDEFINIDO', 'POR SERVICIOS', 'SIN VINCULO', 'TEMPORAL', 'TERMINO FIJO','NaN','APRENDIZ'],"IBS":['INDEFINIDO','PRESTACION DE SERVICIOS', 'NaN', 'OBRA O LABOR CONTRATADA','FIJO', 'NaN', 'APRENDIZAJE']}
homologa_tipo_contrato = pd.DataFrame(homologa_tipo_contrato)

os.chdir(r'\\192.168.0.16\Gerencia de Riesgos\SARC de GESTION\MODELOS_SARC_GESTION\ENTRADA_BEHAVESCORE')
filenames=glob.glob('**/Exo_catego_**.txt', recursive=True)
print(filenames)

for file in filenames: 
    print(file)
    path_input=r'\\192.168.0.16\Gerencia de Riesgos\SARC de GESTION\MODELOS_SARC_GESTION\ENTRADA_BEHAVESCORE'
    os.chdir(r'\\192.168.0.16\Gerencia de Riesgos\SARC de GESTION\MODELOS_SARC_GESTION\ENTRADA_BEHAVESCORE')
    exocatego = pd.read_csv(file, sep='\t', encoding = 'ansi',dtype={'tipo_id':np.int64 ,'nro_id':np.object, 'estado_civil':np.object, 'genero':np.object,'cod_activ_experto2':np.object,'nivel_academico':np.object, 'profesion': np.object, 'ciudad_nacimiento': np.object, 'barrio_residencia':np.object, 'barrio_micro': np.object},float_precision = True, nrows=None)
    exocatego['corte']=file[11:17]
    print(exocatego.shape)
    exocatego_2=exocatego.merge(homologa_id_1, how='left', left_on='tipo_id', right_on='DIALOGO')
    exocatego_2['IBS']=np.where(exocatego_2.IBS.isnull(),exocatego_2.tipo_id,exocatego_2.IBS)
    exocatego_2.tipo_id=exocatego_2['IBS']
    exocatego_2.drop([ 'DIALOGO', 'IBS'], axis=1, inplace=True)
    exocatego_2.fillna('NaN', inplace=True)
    exocatego_3=exocatego_2.merge(homologa_ciudad, how='left', left_on='ciudad_nacimiento', right_on='DIALOGO')
    exocatego_3['IBS']=np.where(exocatego_3.IBS.isnull(),exocatego_3.ciudad_nacimiento,exocatego_3.IBS)
    exocatego_3.ciudad_nacimiento=exocatego_3['IBS']
    exocatego_3.drop([ 'DIALOGO', 'IBS'], axis=1, inplace=True)
    exocatego_3.fillna('NaN', inplace=True)
    exocatego_4=exocatego_3.merge(homologa_genero, how='left', left_on='genero', right_on='DIALOGO')
    exocatego_4['IBS']=np.where(exocatego_4.IBS.isnull(),exocatego_4.genero,exocatego_4.IBS)
    exocatego_4.genero=exocatego_4['IBS']
    exocatego_4.drop([ 'DIALOGO', 'IBS'], axis=1, inplace=True)
    exocatego_4.fillna('NaN', inplace=True)
    exocatego_5=exocatego_4.merge(homologa_estado_civil, how='left', left_on='estado_civil', right_on='DIALOGO')
    exocatego_5['IBS']=np.where(exocatego_5.IBS.isnull(),exocatego_5.estado_civil,exocatego_5.IBS)
    exocatego_5.estado_civil=exocatego_5['IBS']
    exocatego_5.drop([ 'DIALOGO', 'IBS'], axis=1, inplace=True)
    exocatego_5.fillna('NaN', inplace=True)
    exocatego_6=exocatego_5.merge(homologa_nivel_academico, how='left', left_on='nivel_academico', right_on='DIALOGO')
    exocatego_6['IBS']=np.where(exocatego_6.IBS.isnull(),exocatego_6.nivel_academico,exocatego_6.IBS)
    exocatego_6.nivel_academico=exocatego_6['IBS']
    exocatego_6.drop([ 'DIALOGO', 'IBS'], axis=1, inplace=True)
    exocatego_6.fillna('NaN', inplace=True)
    exocatego_7=exocatego_6.merge(homologa_profesion, how='left', left_on='profesion', right_on='DIALOGO')
    exocatego_7['IBS']=np.where(exocatego_7.IBS.isnull(),exocatego_7.profesion,exocatego_7.IBS)
    exocatego_7.profesion=exocatego_7['IBS']
    exocatego_7.drop([ 'DIALOGO', 'IBS'], axis=1, inplace=True)
    exocatego_7.fillna('NaN', inplace=True)
    exocatego_8=exocatego_7.merge(homologa_barrio, how='left', left_on='barrio_residencia', right_on='DIALOGO')
    exocatego_8['IBS']=np.where(exocatego_8.IBS.isnull(),exocatego_8.barrio_residencia,exocatego_8.IBS)
    exocatego_8.barrio_residencia=exocatego_8['IBS']
    exocatego_8.drop([ 'DIALOGO', 'IBS'], axis=1, inplace=True)
    exocatego_8.fillna('NaN', inplace=True)
    exocatego_9=exocatego_8.merge(homologa_barrio, how='left', left_on='barrio_micro', right_on='DIALOGO')
    exocatego_9['IBS']=np.where(exocatego_9.IBS.isnull(),exocatego_9.barrio_micro,exocatego_9.IBS)
    exocatego_9.barrio_micro=exocatego_9['IBS']
    exocatego_9.drop([ 'DIALOGO', 'IBS'], axis=1, inplace=True)
    exocatego_9.fillna('NaN', inplace=True)
    exocatego_10=exocatego_9.merge(homologa_tipo_local, how='left', left_on='tipo_local', right_on='DIALOGO')
    exocatego_10['IBS']=np.where(exocatego_10.IBS.isnull(),exocatego_10.tipo_local,exocatego_10.IBS)
    exocatego_10.tipo_local=exocatego_10['IBS']
    exocatego_10.drop([ 'DIALOGO', 'IBS'], axis=1, inplace=True)
    exocatego_10.fillna('NaN', inplace=True)
    exocatego_11=exocatego_10.merge(homologa_tipo_contrato, how='left', left_on='tipo_contrato', right_on='DIALOGO')
    exocatego_11['IBS']=np.where(exocatego_11.IBS.isnull(),exocatego_11.tipo_contrato,exocatego_11.IBS)
    exocatego_11.tipo_contrato=exocatego_11['IBS']
    exocatego_11.drop([ 'DIALOGO', 'IBS'], axis=1, inplace=True)
    exocatego_11.fillna('NaN', inplace=True)      
    os.chdir(r'\\192.168.0.16\Gerencia de Riesgos\SARC de GESTION\MODELOS_SARC_GESTION_HOMOLOGADO\ENTRADA_BEHAVESCORE')
    exocatego_11.to_csv(file, index=False,  sep='\t', encoding='ansi')

os.chdir(r'\\192.168.0.16\Gerencia de Riesgos\SARC de GESTION\MODELOS_SARC_GESTION_HOMOLOGADO\ENTRADA_BEHAVESCORE')
base_exocatego = pd.concat([pd.read_csv(file, sep='\t', encoding ='ansi') for file in filenames ])

os.chdir(r'\\192.168.0.16\Gerencia de Riesgos\Modelos de Riesgo\00. AREA MODELOS\48. BASES DE DATOS MODELOS\Data_Cobranzas_Franklin')
base_exocatego.to_csv('Base_Exocatego_201801_201912.txt', index=False,  sep='\t', encoding='ansi')